module todo;
//Three speakers chat in a chat session initialized by the actor Chat
import java.time.Duration;
import java.time.Instant;
import java.util.Date;
import java.sql.Timestamp;

behavior NoConsistencySimpleTodo
{
	void chatSession(User s1, User s2, User s3, User s4, User s5, String username1,
                                                String username2,String username3, String username4, String username5, TaskList taskList)
	{
		// these tasks are created in server..

		s1<-addTaskToList(taskList, "User 1: Random Task 1", username1, "u1t1", false, 0, 12);
		s1<-addTaskToList(taskList, "User 1: Random Task 2", username1, "u1t2", false, 0, 12);
		s1<-addTaskToList(taskList, "User 1: Random Task 3", username1, "u1t3", false, 0, 12);
		s2<-addTaskToList(taskList, "User 2: Random Task 1", username2, "u2t1", false, 0, 12);
		s2<-addTaskToList(taskList, "User 2: Random Task 2", username2, "u2t2", false, 0, 12);
		s2<-addTaskToList(taskList, "User 2: Random Task 3", username2, "u2t3", false, 0, 12);
		s3<-addTaskToList(taskList, "User 3: Random Task 1", username3, "u3t1", false, 0, 12);
		s3<-addTaskToList(taskList, "User 3: Random Task 2", username3, "u3t2", false, 0, 12);
		s3<-addTaskToList(taskList, "User 3: Random Task 3", username3, "u3t3", false, 0, 12);
		s4<-addTaskToList(taskList, "User 4: Random Task 1", username4, "u4t1", false, 0, 12);
		s4<-addTaskToList(taskList, "User 4: Random Task 2", username4, "u4t2", false, 0, 12);
		s4<-addTaskToList(taskList, "User 4: Random Task 3", username4, "u4t3", false, 0, 12);
		s5<-addTaskToList(taskList, "User 5: Random Task 1", username5, "u5t1", false, 0, 12);
		s5<-addTaskToList(taskList, "User 5: Random Task 2", username5, "u5t2", false, 0, 12);
		s5<-addTaskToList(taskList, "User 5: Random Task 3", username5, "u5t3", false, 0, 12);
	}

	void reply(String replyMsg)
	{
		standardOutput<-println(replyMsg);
	}

	void act(String args[])
	{

		if(args.length < 11 )
		{
			standardOutput<-println("Usage: java -Duan=myuan todo.Chat <userUAN1> <userUAN2> <taskListUAN3> <taskUAN4> <taskUAN5> <taskUAN6>");
			return;
		}

		try 
		{
			User user1 =(User) User.getReferenceByName(args[0]);
            User user2 =(User) User.getReferenceByName(args[1]);
            User user3 =(User) User.getReferenceByName(args[2]);
            User user4 =(User) User.getReferenceByName(args[3]);
            User user5 =(User) User.getReferenceByName(args[4]);
            String username1 = args[5];
            String username2 = args[6];
            String username3 = args[7];
            String username4 = args[8];
            String username5 = args[9];
            TaskList taskList =(TaskList) TaskList.getReferenceByName(args[10]);

			// keep track of starting time here
			Date first = new Date();
			Timestamp start = new Timestamp(first.getTime());
			standardOutput<-println("Starting time: " + start);

			// use this to calculate time elapsed
			Instant begin = Instant.now();
			chatSession(user1, user2,user3, user4, user5,username1,
                                    			 username2,username3,username4,username5,taskList) @ trackEndingTime(begin) @ standardOutput<-println("Done with user conversation");
		}
		catch (Exception e)
		{
			standardOutput<-println("Usage: java todo.Chat <userUAN1> <userUAN2> <taskListUAN3> <taskUAN4> <taskUAN5>");
			return;
		} 
	}

    void trackEndingTime(Instant begin)
    {
        // keep track of ending time here
        Date second = new Date();
        Timestamp end = new Timestamp(second.getTime());

        // calculate time elapsed
        Instant endTime = Instant.now();
        Duration timeDifference = Duration.between(begin, endTime);
        long timeTaken = timeDifference.toMillis();
        standardOutput <- println("Time taken to run this in milliseconds: " + timeTaken);
        standardOutput<-println("Ending time: " + end);
	}
}

