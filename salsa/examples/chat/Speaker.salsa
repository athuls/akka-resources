module examples.chat;


behavior Speaker implements ActorService{
	private String myName="";	
	Server server_ref;
	
	Speaker(String name) {
	  myName=name;
	}	

	void talk(Chat remoteChat, String remoteName, String myMessage) {
		standardOutput<-println(remoteName+": " + myMessage);
		remoteChat<-reply(remoteName + "'s message received");
	}

	void broadcastSend(String msg) {
		standardOutput<-println("[local] " + myName + ": " + msg);
		//server_ref<-broadcast(getUAN().toString(), msg);
		server_ref<-broadcast(myName, msg);
	}	

	void broadcastReceive(String speakerName, String msg) {
		standardOutput<-println(speakerName + ": " + msg);
	}	

	String whoAmI() {
	  return myName;
	}

	void whereAmI() {
		standardOutput<-println("Speaker started with uan: "+ getUAN().toString());
	}	

	void act(String args[]){
		if(args.length != 2){
			standardOutput<-println("Usage: java -Duan=uan://hostname/place examples.chat.Sender <myName>");
			return;
		}
		
		server_ref = (Server) Server.getReferenceByName(args[0]);
		if(args.length == 2) {
			myName=args[1];
			whereAmI();
		}
	}	
}
