module examples.chat;
//Server backend for the chat application

import java.util.List;
import java.util.ArrayList;

behavior Server implements ActorService{
	
	List registeredUsers;

	Server() {
		registeredUsers = new ArrayList();
	}	

	void broadcast(String speakerName, String msg) {
		standardOutput<-println("Speaker name for message is " + speakerName);
		for(int i = 0; i < registeredUsers.size(); i++) {
			if(!registeredUsers.get(i).equals(speakerName)) {
				Speaker speakerRef = (Speaker) Speaker.getReferenceByName((String)registeredUsers.get(i));
				speakerRef<-broadcastReceive(speakerName, msg);
			}
		}	
  	}

	boolean registerUser(String userId) {
		// Check any condition for registration if required
		standardOutput<-println("Registering speaker " + userId);
		registeredUsers.add(userId);
		return true;
		
	}
	
	void act(String args[]) {
		if(args != null ){
			standardOutput<-println("Usage: java -Duan=myuan examples.chat.Server");
			return;
		}
		
		standardOutput<-println("Server started");
	}
}
